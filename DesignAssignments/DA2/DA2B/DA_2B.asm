;
; Assembly.asm
;
; Created: 3/9/2019 7:16:53 PM
; Author : TheodorePele


;connect a sw to portc.2 to poll for an event to turn on 
;LED at portb.2 for 1.250 sec after event

;ENDED UP USING EXCEL TO CREATE VALUES FOR R19,R20,R21
;TO CREATE DESIRED PERIOD VALUES
;FOR 1Mhz
; 2, 189, 255 USED APPROX. 290310 CYCLES
; 3, 189, 255 USED APPROX. 435465 CYCLES
;FOR 16Mhz
;40, 227, 254 USED APPROX 0.434ms
;27, 227, 254 used approx 0.293ms
;102,255, 255 used to generate approx 1.25 (1.248499seconds)
start:
.include <m328pbdef.inc>

.org 0; LOCATION USED FOR RESET OR RET FOR INTERRUPT
	JMP MAIN
.org 0x02;LOCATION FOR EXTERNAL INTERRUPT 0
	JMP EXO_ISR
MAIN:
	LDI R20, HIGH(RAMEND)
	OUT SPH, R20 ;stack high for address
	LDI R20, LOW(RAMEND)
	OUT SPL, R20 ;stack low for address 

	LDI R20, 0x02;MAKE INTO TO FALLING EDGE TRIGGERED
	STS EICRA, R20;ExternAL Interrupt Control Register to use falling edge
	OUT DDRB, R16 ;MAKES PORTB.2 AN OUTPUT PORT
	SBI PORTD, 2  ;PULL-UP ACTIVATED FOR INT0 AT PORTD.2
	LDI R20, 1<<INT0;SETTING BIT TO HIGH FOR INT0 PLACE
	OUT EIMSK, R20;External Interrupt Mask Reg to enable request 0
	SEI			  ;ENABLES INTERRUPT
HERE:
	JMP HERE	  ;KEEP THE PROGRAM RUNNING
EXO_ISR:
	;IN  R20, PORTB	
	;CPI R20, 0	  ;IF 0 THEN SW WAS PRESSED
	;BRNE L1		  ;SO IF EQUAL THEN IT KEEPS LOOPING UNTIL ITS TRUE
	SBI DDRB, 2	  ;SWITCHES LED ON
	CALL DELAY	  ;DELAY SUBROUTINE IS CALLED
	CBI DDRB, 2	  ;CLEAR BIT PB5 TO TURN OFF OR LOW
	RETI		  ; EXITS INTERRUPT RJMP L1

DELAY:
	LDI R19, 102
DELAY0:			  ;USED FOR LABEL FOR BRANCH INSTRUCTION
	LDI R20, 227
DELAY1:
	LDI R21, 254
DELAY2:
	DEC R21
	BRNE DELAY2 ;DECREASES R21 IF NOT EQUAL TO ZERO KEEP DECREMENTING
	DEC R20
	BRNE DELAY1 ;CHECKS R20 IF EQUAL TO ZERO
	DEC R19
	BRNE DELAY0 ;CHECKS R19 IF EQUAL TO ZERO
	LDI R19, 27  ;USED FOR SECOND CALL TO GENERATE 0.290 ms
	RET			;RETURNS TO CALL FUNCTION